include(GitInfo) # YCM

# Define current version.
set(CHECK_TEO_COLLISIONS_VERSION_SHORT ${CHECK_TEO_COLLISIONS_VERSION})

# Retrieve current revision from Git working tree.
git_wt_info(SOURCE_DIR "${CMAKE_SOURCE_DIR}"
            PREFIX CHECK_TEO_COLLISIONS)

if(DEFINED CHECK_TEO_COLLISIONS_GIT_WT_HASH)
    if(CHECK_TEO_COLLISIONS_GIT_WT_TAG_REVISION GREATER 0)
        set(CHECK_TEO_COLLISIONS_VERSION_REVISION ${CHECK_TEO_COLLISIONS_GIT_WT_TAG_REVISION})
        string(REPLACE "-" "" _date ${CHECK_TEO_COLLISIONS_GIT_WT_AUTHOR_DATE})
        set(CHECK_TEO_COLLISIONS_VERSION_SOURCE
            "${_date}.${CHECK_TEO_COLLISIONS_GIT_WT_DATE_REVISION}+git${CHECK_TEO_COLLISIONS_GIT_WT_HASH_SHORT}")
    endif()

    if(CHECK_TEO_COLLISIONS_GIT_WT_DIRTY)
        set(CHECK_TEO_COLLISIONS_VERSION_DIRTY "dirty")
    endif()
endif()

if(DEFINED CHECK_TEO_COLLISIONS_VERSION_SOURCE)
    if(NOT "${CHECK_TEO_COLLISIONS_GIT_WT_TAG}" STREQUAL "v${CHECK_TEO_COLLISIONS_VERSION_SHORT}")
        set(CHECK_TEO_COLLISIONS_VERSION
            "${CHECK_TEO_COLLISIONS_VERSION_SHORT}+${CHECK_TEO_COLLISIONS_VERSION_SOURCE}")
    else()
        set(CHECK_TEO_COLLISIONS_VERSION
           "${CHECK_TEO_COLLISIONS_VERSION_SHORT}+${CHECK_TEO_COLLISIONS_VERSION_REVISION}-${CHECK_TEO_COLLISIONS_VERSION_SOURCE}")
    endif()
elseif(NOT "${CHECK_TEO_COLLISIONS_GIT_WT_TAG}" STREQUAL "v${CHECK_TEO_COLLISIONS_VERSION_SHORT}")
    set(CHECK_TEO_COLLISIONS_VERSION "${CHECK_TEO_COLLISIONS_VERSION_SHORT}~dev")
else()
    set(CHECK_TEO_COLLISIONS_VERSION "${CHECK_TEO_COLLISIONS_VERSION_SHORT}")
endif()

if(DEFINED CHECK_TEO_COLLISIONS_VERSION_DIRTY)
    set(CHECK_TEO_COLLISIONS_VERSION "${CHECK_TEO_COLLISIONS_VERSION}+${CHECK_TEO_COLLISIONS_VERSION_DIRTY}")
endif()

# Print version.
message(STATUS "CHECK_TEO_COLLISIONS version: ${CHECK_TEO_COLLISIONS_VERSION_SHORT} (${CHECK_TEO_COLLISIONS_VERSION})")
